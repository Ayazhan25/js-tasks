<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Rest Countries</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3" crossorigin="anonymous">
    <link rel="stylesheet" href="/task2/task2.css">
</head>
<body>
    <div class="container">
        <div class="card" style="width: 18rem;">
            <img src="..." class="card-img-top" alt="...">
            <div class="card-body">
                <h5 class="card-title">Card title</h5>
                <p class="card-text">Some quick example text to build on the card title and make up the bulk of the card's content.</p>
            </div>
            <ul class="list-group list-group-flush">
                <li class="list-group-item population">An item</li>
                <li class="list-group-item language">A second item</li>
                <li class="list-group-item currency">A third item</li>
            </ul>
        </div>

        <div class="card" style="width: 18rem;">
            <img src="..." class="card-img-top" alt="...">
            <div class="card-body">
                <h5 class="card-title">Card title</h5>
                <p class="card-text">Some quick example text to build on the card title and make up the bulk of the card's content.</p>
            </div>
            <ul class="list-group list-group-flush">
                <li class="list-group-item population">An item</li>
                <li class="list-group-item language">A second item</li>
                <li class="list-group-item currency">A third item</li>
            </ul>
        </div>

        <div class="card" style="width: 18rem;">
            <img src="..." class="card-img-top" alt="...">
            <div class="card-body">
                <h5 class="card-title">Card title</h5>
                <p class="card-text">Some quick example text to build on the card title and make up the bulk of the card's content.</p>
            </div>
            <ul class="list-group list-group-flush">
                <li class="list-group-item population">An item</li>
                <li class="list-group-item language">A second item</li>
                <li class="list-group-item currency">A third item</li>
            </ul>
        </div>

        <div class="card" style="width: 18rem;">
            <img src="..." class="card-img-top" alt="...">
            <div class="card-body">
                <h5 class="card-title">Card title</h5>
                <p class="card-text">Some quick example text to build on the card title and make up the bulk of the card's content.</p>
            </div>
            <ul class="list-group list-group-flush">
                <li class="list-group-item population">An item</li>
                <li class="list-group-item language">A second item</li>
                <li class="list-group-item currency">A third item</li>
            </ul>
        </div>

        <div class="card" style="width: 18rem;">
            <img src="..." class="card-img-top" alt="...">
            <div class="card-body">
                <h5 class="card-title">Card title</h5>
                <p class="card-text">Some quick example text to build on the card title and make up the bulk of the card's content.</p>
            </div>
            <ul class="list-group list-group-flush">
                <li class="list-group-item population">An item</li>
                <li class="list-group-item language">A second item</li>
                <li class="list-group-item currency">A third item</li>
            </ul>
        </div>


        <div class="card" style="width: 18rem;">
            <img src="..." class="card-img-top" alt="...">
            <div class="card-body">
              <h5 class="card-title">Card title</h5>
              <p class="card-text">Some quick example text to build on the card title and make up the bulk of the card's content.</p>
            </div>
            <ul class="list-group list-group-flush">
              <li class="list-group-item population">An item</li>
              <li class="list-group-item language">A second item</li>
              <li class="list-group-item currency">A third item</li>
            </ul>
        </div>
    </div>
</body>
<script src="js/script.js"></script>
</html>

// Задание 2. Карточки стран
// Есть API с информацией о 120 странах мира. URL (запросы на FULL NAME):
// https://restcountries.com
// Получить данные с помощью fetch и сформировать разметку карточек стран (например каждую 10-ю из массива) по ОБРАЗЦУ.
// ВАЖНО: Для разметки используйте сетку bootstrap, шаблоны смотрите ЗДЕСЬ.
const flagImg = document.querySelectorAll(".card-img-top"),
countryName = document.querySelectorAll(".card-title"),
landName = document.querySelectorAll(".card-text"),
populationName = document.querySelectorAll(".population"),
languageName = document.querySelectorAll(".language"),
currencyName = document.querySelectorAll(".currency");

fetch("https://restcountries.com/v3.1/all")
  .then((response) => response.json())
  .then((data) => getCountryCard(data))
  .catch((error) => console.error(error));

function getCountryCard(data){
    getEmojiFamily();
    getEmojiLang();
    getEmojiCurrency();
    let j = 0;
    for (let i = 0; i < countryName.length; i++) {
      flagImg[i].src = data[j].flags.png;
      countryName[i].innerText = data[j].name.official;
      landName[i].innerText = data[j].region;
      for (const key in data[j].languages) {
        languageName[i].innerText = data[j].languages[key];
      }
      let populationNum = data[j].population / 1000000;
      populationName[i].innerText = populationNum.toFixed(1) + " mln";
      for (const key in data[j].currencies) {
        currencyName[i].innerText = data[j].currencies[key].symbol + " " + data[j].currencies[key].name;
      }
      j += 10;
    }
}


function getEmojiLang() {
  fetch("https://api.api-ninjas.com/v1/emoji?name=speaking", {
    method: "GET",
    headers: {
      "Content-Type": "application/json",
      "X-Api-Key": "ZIVeRDdEk9DcKai/VkIOpw==8ULtg1yCaYNFVtQB",
    },
  })
    .then((response) => response.json())
    .then((data) => { 
      for (let i = 0; i < languageName.length; i++){
        const langEmoji = document.createElement("span");
        langEmoji.innerText = data[0].character + " ";
        languageName[i].prepend(langEmoji);
      }
    })
    .catch((error) => console.error(error));
}

function getEmojiFamily() {
  fetch("https://api.api-ninjas.com/v1/emoji?name=family", {
    method: "GET",
    headers: {
      "Content-Type": "application/json",
      "X-Api-Key": "ZIVeRDdEk9DcKai/VkIOpw==8ULtg1yCaYNFVtQB",
    },
  })
    .then((response) => response.json())
    .then((data) => { 
      for (let i = 0; i < populationName.length; i++){
        const familyEmoji = document.createElement("span");
        familyEmoji.innerText = data[0].character + " ";
        populationName[i].prepend(familyEmoji);
      }
    })
    .catch((error) => console.error(error));
}

function getEmojiCurrency() {
  fetch("https://api.api-ninjas.com/v1/emoji?name=money", {
    method: "GET",
    headers: {
      "Content-Type": "application/json",
      "X-Api-Key": "ZIVeRDdEk9DcKai/VkIOpw==8ULtg1yCaYNFVtQB",
    },
  })
    .then((response) => response.json())
    .then((data) => { 
      for (let i = 0; i < currencyName.length; i++){
        const currencyEmoji = document.createElement("span");
        currencyEmoji.innerText = data[1].character + " ";
        currencyName[i].prepend(currencyEmoji);
      }
    })
    .catch((error) => console.error(error));
}


* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

.container{
    width: 1420px;
    margin: 50px auto;
    display: flex;
    justify-content: center;
    align-items: flex-start;
    flex-wrap: wrap;
    gap: 70px;
}

.card{
    height: 26rem;
    font-weight: 700;
    border: 1px rgba(0, 0, 0, 0.226) solid;
}

.card-neighbors{
    width: 12rem;
    height: 20%;
    font-size: 12px;
    border: 1px rgba(0, 0, 0, 0.226) solid;
}

.header-neighbors{
    width: 100%;
    height: 10%;
    background-color: rgba(0, 140, 255, 0.884);
    color: #FFFFFF;
    padding: 7px 10px;
    font-size: 10px;
    text-align: center;
}
